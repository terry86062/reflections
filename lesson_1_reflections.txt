How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It's very useful and can save much time and avoid human mistake.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It can help users write what they want because they know if there is something wrong they can go back to previous version easily.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pro of Git is that a logic commit can be understanded easier when I check it again.
    The pro of Google docs is that if I forget to commit, it will do it for me.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because their using purpose is difference.
    Git is designed for coding and it will involve multiple files.
    Google Docs is designed for normal use like writing a report, so it no need to track multiple files.

How can you use the commands git log and git diff to view the history of files?

    First, use git log to find the message of history of files.
    Second, use git diff to find what actually change in the file.

How might using version control make you more confident to make changes that
could break something?

    Because I can use version control to go back to previous version, so I won't be afraid to change my code.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use Git to my personal project.
